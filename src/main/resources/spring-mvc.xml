<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    
    <description>Spring MVC Configuration</description>
     
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/prop/DBSource.properties" />
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.flong"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 设置请求映射编码，解决@ResponseBody乱码问题 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                            <!--    <value>text/html;charset=UTF-8</value> -->
                            <value>application/json;charset=UTF-8</value>   
                        </list>
                    </property>
                </bean>
				 <ref bean="mappingJacksonHttpMessageConverter"/> 
            </list>
        </property>

    </bean>
    <!-- 处理JSON数据转换的 --> 
	<!-- 为了处理返回的JSON数据的编码，默认是ISO-88859-1的，这里把它设置为UTF-8,解决有乱码的情况 -->
	<bean id="mappingJacksonHttpMessageConverter"   
       class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">   
		<property name="supportedMediaTypes">    
            <list>    
               <!--   <value>text/html;charset=UTF-8</value> -->
                  <value>application/json;charset=UTF-8</value>
          </list>    
       </property>    
    </bean>  
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven/>
	
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler/>

	 

	<!-- 视图文件解析配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="${web.view.prefix}"/>
		<property name="suffix" value="${web.view.suffix}"/>
	</bean>
	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>
	
	 
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize" value="${web.maxUploadSize}" />  
    </bean>
    
  
		
<!-- 这个映射配置主要是用来进行静态资源的访问
	  对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 
	<mvc:default-servlet-handler/>同等如下配置
 	
 	<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/> 
	<mvc:resources mapping="/css/**" location="/css/" />  
	<mvc:resources mapping="/**/**" location="/" />  
    <mvc:resources mapping="/WEB-INF/view/**" location="/WEB-INF/view/" />  -->
 
 
</beans>
